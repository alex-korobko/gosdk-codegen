// Package shipping provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.1 DO NOT EDIT.
package shipping

import (
	"time"
)

// Defines values for ContainerContainerType.
const (
	ContainerContainerTypePACKAGE ContainerContainerType = "PACKAGE"
)

// Defines values for DimensionsUnit.
const (
	DimensionsUnitCM DimensionsUnit = "CM"

	DimensionsUnitIN DimensionsUnit = "IN"
)

// Defines values for LabelSpecificationLabelFormat.
const (
	LabelSpecificationLabelFormatPNG LabelSpecificationLabelFormat = "PNG"
)

// Defines values for LabelSpecificationLabelStockSize.
const (
	LabelSpecificationLabelStockSizeX6 LabelSpecificationLabelStockSize = "4x6"
)

// Defines values for ServiceType.
const (
	ServiceTypeAmazonShippingGround ServiceType = "Amazon Shipping Ground"

	ServiceTypeAmazonShippingPremium ServiceType = "Amazon Shipping Premium"

	ServiceTypeAmazonShippingStandard ServiceType = "Amazon Shipping Standard"
)

// Defines values for WeightUnit.
const (
	WeightUnitG WeightUnit = "g"

	WeightUnitKg WeightUnit = "kg"

	WeightUnitLb WeightUnit = "lb"

	WeightUnitOz WeightUnit = "oz"
)

// The specific rate purchased for the shipment, or null if unpurchased.
type AcceptedRate struct {

	// The weight.
	BilledWeight *Weight `json:"billedWeight,omitempty"`

	// The promised delivery time and pickup time.
	Promise *ShippingPromiseSet `json:"promise,omitempty"`

	// The type of shipping service that will be used for the service offering.
	ServiceType *ServiceType `json:"serviceType,omitempty"`

	// The total value of all items in the container.
	TotalCharge *Currency `json:"totalCharge,omitempty"`
}

// The account related data.
type Account struct {

	// This is the Amazon Shipping account id generated during the Amazon Shipping onboarding process.
	AccountId AccountId `json:"accountId"`
}

// This is the Amazon Shipping account id generated during the Amazon Shipping onboarding process.
type AccountId string

// The address.
type Address struct {

	// First line of that address.
	AddressLine1 string `json:"addressLine1"`

	// Additional address information, if required.
	AddressLine2 *string `json:"addressLine2,omitempty"`

	// Additional address information, if required.
	AddressLine3 *string `json:"addressLine3,omitempty"`

	// The city where the person, business or institution is located.
	City City `json:"city"`

	// The email cc addresses of the contact associated with the address.
	CopyEmails *[]string `json:"copyEmails,omitempty"`

	// The two digit country code. In ISO 3166-1 alpha-2 format.
	CountryCode CountryCode `json:"countryCode"`

	// The email address of the contact associated with the address.
	Email *string `json:"email,omitempty"`

	// The name of the person, business or institution at that address.
	Name string `json:"name"`

	// The phone number of the person, business or institution located at that address.
	PhoneNumber *string `json:"phoneNumber,omitempty"`

	// The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
	PostalCode PostalCode `json:"postalCode"`

	// The state or region where the person, business or institution is located.
	StateOrRegion StateOrRegion `json:"stateOrRegion"`
}

// The response schema for the cancelShipment operation.
type CancelShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`
}

// The city where the person, business or institution is located.
type City string

// Client reference id.
type ClientReferenceId string

// Container in the shipment.
type Container struct {

	// An identifier for the container. This must be unique within all the containers in the same shipment.
	ContainerReferenceId ContainerReferenceId `json:"containerReferenceId"`

	// The type of physical container being used. (always 'PACKAGE')
	ContainerType *ContainerContainerType `json:"containerType,omitempty"`

	// A set of measurements for a three-dimensional object.
	Dimensions Dimensions `json:"dimensions"`

	// A list of the items in the container.
	Items []ContainerItem `json:"items"`

	// The total value of all items in the container.
	Value Currency `json:"value"`

	// The weight.
	Weight Weight `json:"weight"`
}

// The type of physical container being used. (always 'PACKAGE')
type ContainerContainerType string

// Item in the container.
type ContainerItem struct {

	// The quantity of the items of this type in the container.
	Quantity float32 `json:"quantity"`

	// A descriptive title of the item.
	Title string `json:"title"`

	// The total value of all items in the container.
	UnitPrice Currency `json:"unitPrice"`

	// The weight.
	UnitWeight Weight `json:"unitWeight"`
}

// A list of container.
type ContainerList []Container

// An identifier for the container. This must be unique within all the containers in the same shipment.
type ContainerReferenceId string

// Container specification for checking the service rate.
type ContainerSpecification struct {

	// A set of measurements for a three-dimensional object.
	Dimensions Dimensions `json:"dimensions"`

	// The weight.
	Weight Weight `json:"weight"`
}

// A list of container specifications.
type ContainerSpecificationList []ContainerSpecification

// The two digit country code. In ISO 3166-1 alpha-2 format.
type CountryCode string

// The request schema for the createShipment operation.
type CreateShipmentRequest struct {

	// Client reference id.
	ClientReferenceId ClientReferenceId `json:"clientReferenceId"`

	// A list of container.
	Containers ContainerList `json:"containers"`

	// The address.
	ShipFrom Address `json:"shipFrom"`

	// The address.
	ShipTo Address `json:"shipTo"`
}

// The response schema for the createShipment operation.
type CreateShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload schema for the createShipment operation.
	Payload *CreateShipmentResult `json:"payload,omitempty"`
}

// The payload schema for the createShipment operation.
type CreateShipmentResult struct {

	// A list of all the available rates that can be used to send the shipment.
	EligibleRates RateList `json:"eligibleRates"`

	// The unique shipment identifier.
	ShipmentId ShipmentId `json:"shipmentId"`
}

// The total value of all items in the container.
type Currency struct {

	// A 3-character currency code.
	Unit string `json:"unit"`

	// The amount of currency.
	Value float32 `json:"value"`
}

// A set of measurements for a three-dimensional object.
type Dimensions struct {

	// The height of the container.
	Height float32 `json:"height"`

	// The length of the container.
	Length float32 `json:"length"`

	// The unit of these measurements.
	Unit DimensionsUnit `json:"unit"`

	// The width of the container.
	Width float32 `json:"width"`
}

// The unit of these measurements.
type DimensionsUnit string

// Error response returned when the request is unsuccessful.
type Error struct {

	// An error code that identifies the type of error that occured.
	Code string `json:"code"`

	// Additional details that can help the caller understand or fix the issue.
	Details *string `json:"details,omitempty"`

	// A message that describes the error condition in a human-readable form.
	Message string `json:"message"`
}

// A list of error responses returned when a request is unsuccessful.
type ErrorList []Error

// An event of a shipment
type Event struct {

	// The event code of a shipment, such as Departed, Received, and ReadyForReceive.
	EventCode EventCode `json:"eventCode"`

	// The date and time of an event for a shipment.
	EventTime time.Time `json:"eventTime"`

	// The location where the person, business or institution is located.
	Location *Location `json:"location,omitempty"`
}

// The event code of a shipment, such as Departed, Received, and ReadyForReceive.
type EventCode string

// A list of events of a shipment.
type EventList []Event

// The response schema for the getAccount operation.
type GetAccountResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The account related data.
	Payload *Account `json:"payload,omitempty"`
}

// The payload schema for the getRates operation.
type GetRatesRequest struct {

	// A list of container specifications.
	ContainerSpecifications ContainerSpecificationList `json:"containerSpecifications"`

	// A list of service types that can be used to send the shipment.
	ServiceTypes ServiceTypeList `json:"serviceTypes"`

	// The start date and time. This defaults to the current date and time.
	ShipDate *time.Time `json:"shipDate,omitempty"`

	// The address.
	ShipFrom Address `json:"shipFrom"`

	// The address.
	ShipTo Address `json:"shipTo"`
}

// The response schema for the getRates operation.
type GetRatesResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload schema for the getRates operation.
	Payload *GetRatesResult `json:"payload,omitempty"`
}

// The payload schema for the getRates operation.
type GetRatesResult struct {

	// A list of service rates.
	ServiceRates ServiceRateList `json:"serviceRates"`
}

// The response schema for the getShipment operation.
type GetShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The shipment related data.
	Payload *Shipment `json:"payload,omitempty"`
}

// The response schema for the getTrackingInformation operation.
type GetTrackingInformationResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload schema for the getTrackingInformation operation.
	Payload *TrackingInformation `json:"payload,omitempty"`
}

// The label details of the container.
type Label struct {

	// The label specification info.
	LabelSpecification *LabelSpecification `json:"labelSpecification,omitempty"`

	// Contains binary image data encoded as a base-64 string.
	LabelStream *LabelStream `json:"labelStream,omitempty"`
}

// Label details including label stream, format, size.
type LabelResult struct {

	// An identifier for the container. This must be unique within all the containers in the same shipment.
	ContainerReferenceId *ContainerReferenceId `json:"containerReferenceId,omitempty"`

	// The label details of the container.
	Label *Label `json:"label,omitempty"`

	// The tracking identifier assigned to the container.
	TrackingId *string `json:"trackingId,omitempty"`
}

// A list of label results
type LabelResultList []LabelResult

// The label specification info.
type LabelSpecification struct {

	// The format of the label. Enum of PNG only for now.
	LabelFormat LabelSpecificationLabelFormat `json:"labelFormat"`

	// The label stock size specification in length and height. Enum of 4x6 only for now.
	LabelStockSize LabelSpecificationLabelStockSize `json:"labelStockSize"`
}

// The format of the label. Enum of PNG only for now.
type LabelSpecificationLabelFormat string

// The label stock size specification in length and height. Enum of 4x6 only for now.
type LabelSpecificationLabelStockSize string

// Contains binary image data encoded as a base-64 string.
type LabelStream string

// The location where the person, business or institution is located.
type Location struct {

	// The city where the person, business or institution is located.
	City *City `json:"city,omitempty"`

	// The two digit country code. In ISO 3166-1 alpha-2 format.
	CountryCode *CountryCode `json:"countryCode,omitempty"`

	// The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
	PostalCode *PostalCode `json:"postalCode,omitempty"`

	// The state or region where the person, business or institution is located.
	StateOrRegion *StateOrRegion `json:"stateOrRegion,omitempty"`
}

// The account related with the shipment.
type Party struct {

	// This is the Amazon Shipping account id generated during the Amazon Shipping onboarding process.
	AccountId *AccountId `json:"accountId,omitempty"`
}

// The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
type PostalCode string

// The promised delivery date and time of a shipment.
type PromisedDeliveryDate time.Time

// The request schema for the purchaseLabels operation.
type PurchaseLabelsRequest struct {

	// The label specification info.
	LabelSpecification LabelSpecification `json:"labelSpecification"`

	// An identifier for the rating.
	RateId RateId `json:"rateId"`
}

// The response schema for the purchaseLabels operation.
type PurchaseLabelsResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload schema for the purchaseLabels operation.
	Payload *PurchaseLabelsResult `json:"payload,omitempty"`
}

// The payload schema for the purchaseLabels operation.
type PurchaseLabelsResult struct {

	// The specific rate purchased for the shipment, or null if unpurchased.
	AcceptedRate AcceptedRate `json:"acceptedRate"`

	// Client reference id.
	ClientReferenceId *ClientReferenceId `json:"clientReferenceId,omitempty"`

	// A list of label results
	LabelResults LabelResultList `json:"labelResults"`

	// The unique shipment identifier.
	ShipmentId ShipmentId `json:"shipmentId"`
}

// The payload schema for the purchaseShipment operation.
type PurchaseShipmentRequest struct {

	// Client reference id.
	ClientReferenceId ClientReferenceId `json:"clientReferenceId"`

	// A list of container.
	Containers ContainerList `json:"containers"`

	// The label specification info.
	LabelSpecification LabelSpecification `json:"labelSpecification"`

	// The type of shipping service that will be used for the service offering.
	ServiceType ServiceType `json:"serviceType"`

	// The start date and time. This defaults to the current date and time.
	ShipDate *time.Time `json:"shipDate,omitempty"`

	// The address.
	ShipFrom Address `json:"shipFrom"`

	// The address.
	ShipTo Address `json:"shipTo"`
}

// The response schema for the purchaseShipment operation.
type PurchaseShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload schema for the purchaseShipment operation.
	Payload *PurchaseShipmentResult `json:"payload,omitempty"`
}

// The payload schema for the purchaseShipment operation.
type PurchaseShipmentResult struct {

	// A list of label results
	LabelResults LabelResultList `json:"labelResults"`

	// The specific rate for a shipping service, or null if no service available.
	ServiceRate ServiceRate `json:"serviceRate"`

	// The unique shipment identifier.
	ShipmentId ShipmentId `json:"shipmentId"`
}

// The available rate that can be used to send the shipment
type Rate struct {

	// The weight.
	BilledWeight *Weight `json:"billedWeight,omitempty"`

	// The time after which the offering will expire.
	ExpirationTime *time.Time `json:"expirationTime,omitempty"`

	// The promised delivery time and pickup time.
	Promise *ShippingPromiseSet `json:"promise,omitempty"`

	// An identifier for the rate.
	RateId *string `json:"rateId,omitempty"`

	// The type of shipping service that will be used for the service offering.
	ServiceType *ServiceType `json:"serviceType,omitempty"`

	// The total value of all items in the container.
	TotalCharge *Currency `json:"totalCharge,omitempty"`
}

// An identifier for the rating.
type RateId string

// A list of all the available rates that can be used to send the shipment.
type RateList []Rate

// The request schema for the retrieveShippingLabel operation.
type RetrieveShippingLabelRequest struct {

	// The label specification info.
	LabelSpecification LabelSpecification `json:"labelSpecification"`
}

// The response schema for the retrieveShippingLabel operation.
type RetrieveShippingLabelResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload schema for the retrieveShippingLabel operation.
	Payload *RetrieveShippingLabelResult `json:"payload,omitempty"`
}

// The payload schema for the retrieveShippingLabel operation.
type RetrieveShippingLabelResult struct {

	// The label specification info.
	LabelSpecification LabelSpecification `json:"labelSpecification"`

	// Contains binary image data encoded as a base-64 string.
	LabelStream LabelStream `json:"labelStream"`
}

// The specific rate for a shipping service, or null if no service available.
type ServiceRate struct {

	// The weight.
	BillableWeight Weight `json:"billableWeight"`

	// The promised delivery time and pickup time.
	Promise ShippingPromiseSet `json:"promise"`

	// The type of shipping service that will be used for the service offering.
	ServiceType ServiceType `json:"serviceType"`

	// The total value of all items in the container.
	TotalCharge Currency `json:"totalCharge"`
}

// A list of service rates.
type ServiceRateList []ServiceRate

// The type of shipping service that will be used for the service offering.
type ServiceType string

// A list of service types that can be used to send the shipment.
type ServiceTypeList []ServiceType

// The shipment related data.
type Shipment struct {

	// The specific rate purchased for the shipment, or null if unpurchased.
	AcceptedRate *AcceptedRate `json:"acceptedRate,omitempty"`

	// Client reference id.
	ClientReferenceId ClientReferenceId `json:"clientReferenceId"`

	// A list of container.
	Containers ContainerList `json:"containers"`

	// The address.
	ShipFrom Address `json:"shipFrom"`

	// The address.
	ShipTo Address `json:"shipTo"`

	// The unique shipment identifier.
	ShipmentId ShipmentId `json:"shipmentId"`

	// The account related with the shipment.
	Shipper *Party `json:"shipper,omitempty"`
}

// The unique shipment identifier.
type ShipmentId string

// The promised delivery time and pickup time.
type ShippingPromiseSet struct {

	// The time range.
	DeliveryWindow *TimeRange `json:"deliveryWindow,omitempty"`

	// The time range.
	ReceiveWindow *TimeRange `json:"receiveWindow,omitempty"`
}

// The state or region where the person, business or institution is located.
type StateOrRegion string

// The time range.
type TimeRange struct {

	// The end date and time. This must come after the value of start. This defaults to the next business day from the start.
	End *time.Time `json:"end,omitempty"`

	// The start date and time. This defaults to the current date and time.
	Start *time.Time `json:"start,omitempty"`
}

// The tracking id generated to each shipment. It contains a series of letters or digits or both.
type TrackingId string

// The payload schema for the getTrackingInformation operation.
type TrackingInformation struct {

	// A list of events of a shipment.
	EventHistory EventList `json:"eventHistory"`

	// The promised delivery date and time of a shipment.
	PromisedDeliveryDate PromisedDeliveryDate `json:"promisedDeliveryDate"`

	// The tracking summary.
	Summary TrackingSummary `json:"summary"`

	// The tracking id generated to each shipment. It contains a series of letters or digits or both.
	TrackingId TrackingId `json:"trackingId"`
}

// The tracking summary.
type TrackingSummary struct {

	// The derived status based on the events in the eventHistory.
	Status *string `json:"status,omitempty"`
}

// The weight.
type Weight struct {

	// The unit of measurement.
	Unit WeightUnit `json:"unit"`

	// The measurement value.
	Value float32 `json:"value"`
}

// The unit of measurement.
type WeightUnit string

// PurchaseShipmentJSONBody defines parameters for PurchaseShipment.
type PurchaseShipmentJSONBody PurchaseShipmentRequest

// GetRatesJSONBody defines parameters for GetRates.
type GetRatesJSONBody GetRatesRequest

// CreateShipmentJSONBody defines parameters for CreateShipment.
type CreateShipmentJSONBody CreateShipmentRequest

// RetrieveShippingLabelJSONBody defines parameters for RetrieveShippingLabel.
type RetrieveShippingLabelJSONBody RetrieveShippingLabelRequest

// PurchaseLabelsJSONBody defines parameters for PurchaseLabels.
type PurchaseLabelsJSONBody PurchaseLabelsRequest

// PurchaseShipmentJSONRequestBody defines body for PurchaseShipment for application/json ContentType.
type PurchaseShipmentJSONRequestBody PurchaseShipmentJSONBody

// GetRatesJSONRequestBody defines body for GetRates for application/json ContentType.
type GetRatesJSONRequestBody GetRatesJSONBody

// CreateShipmentJSONRequestBody defines body for CreateShipment for application/json ContentType.
type CreateShipmentJSONRequestBody CreateShipmentJSONBody

// RetrieveShippingLabelJSONRequestBody defines body for RetrieveShippingLabel for application/json ContentType.
type RetrieveShippingLabelJSONRequestBody RetrieveShippingLabelJSONBody

// PurchaseLabelsJSONRequestBody defines body for PurchaseLabels for application/json ContentType.
type PurchaseLabelsJSONRequestBody PurchaseLabelsJSONBody
