// Package merchantFulfillment provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.1 DO NOT EDIT.
package merchantFulfillment

import (
	"time"
)

// Defines values for CarrierWillPickUpOption.
const (
	CarrierWillPickUpOptionCarrierWillPickUp CarrierWillPickUpOption = "CarrierWillPickUp"

	CarrierWillPickUpOptionNoPreference CarrierWillPickUpOption = "NoPreference"

	CarrierWillPickUpOptionShipperWillDropOff CarrierWillPickUpOption = "ShipperWillDropOff"
)

// Defines values for DeliveryExperienceOption.
const (
	DeliveryExperienceOptionDeliveryConfirmationWithAdultSignature DeliveryExperienceOption = "DeliveryConfirmationWithAdultSignature"

	DeliveryExperienceOptionDeliveryConfirmationWithSignature DeliveryExperienceOption = "DeliveryConfirmationWithSignature"

	DeliveryExperienceOptionDeliveryConfirmationWithoutSignature DeliveryExperienceOption = "DeliveryConfirmationWithoutSignature"

	DeliveryExperienceOptionNoPreference DeliveryExperienceOption = "NoPreference"

	DeliveryExperienceOptionNoTracking DeliveryExperienceOption = "NoTracking"
)

// Defines values for DeliveryExperienceType.
const (
	DeliveryExperienceTypeDeliveryConfirmationWithAdultSignature DeliveryExperienceType = "DeliveryConfirmationWithAdultSignature"

	DeliveryExperienceTypeDeliveryConfirmationWithSignature DeliveryExperienceType = "DeliveryConfirmationWithSignature"

	DeliveryExperienceTypeDeliveryConfirmationWithoutSignature DeliveryExperienceType = "DeliveryConfirmationWithoutSignature"

	DeliveryExperienceTypeNoTracking DeliveryExperienceType = "NoTracking"
)

// Defines values for FileType.
const (
	FileTypeApplicationPdf FileType = "application/pdf"

	FileTypeApplicationZpl FileType = "application/zpl"

	FileTypeImagePng FileType = "image/png"
)

// Defines values for HazmatType.
const (
	HazmatTypeLQHazmat HazmatType = "LQHazmat"

	HazmatTypeNone HazmatType = "None"
)

// Defines values for InputTargetType.
const (
	InputTargetTypeITEMLEVEL InputTargetType = "ITEM_LEVEL"

	InputTargetTypeSHIPMENTLEVEL InputTargetType = "SHIPMENT_LEVEL"
)

// Defines values for LabelFormat.
const (
	LabelFormatPDF LabelFormat = "PDF"

	LabelFormatPNG LabelFormat = "PNG"

	LabelFormatShippingServiceDefault LabelFormat = "ShippingServiceDefault"

	LabelFormatZPL203 LabelFormat = "ZPL203"

	LabelFormatZPL300 LabelFormat = "ZPL300"
)

// Defines values for PredefinedPackageDimensions.
const (
	PredefinedPackageDimensionsFedExBox10kg PredefinedPackageDimensions = "FedEx_Box_10kg"

	PredefinedPackageDimensionsFedExBox25kg PredefinedPackageDimensions = "FedEx_Box_25kg"

	PredefinedPackageDimensionsFedExBoxExtraLarge1 PredefinedPackageDimensions = "FedEx_Box_Extra_Large_1"

	PredefinedPackageDimensionsFedExBoxExtraLarge2 PredefinedPackageDimensions = "FedEx_Box_Extra_Large_2"

	PredefinedPackageDimensionsFedExBoxLarge1 PredefinedPackageDimensions = "FedEx_Box_Large_1"

	PredefinedPackageDimensionsFedExBoxLarge2 PredefinedPackageDimensions = "FedEx_Box_Large_2"

	PredefinedPackageDimensionsFedExBoxMedium1 PredefinedPackageDimensions = "FedEx_Box_Medium_1"

	PredefinedPackageDimensionsFedExBoxMedium2 PredefinedPackageDimensions = "FedEx_Box_Medium_2"

	PredefinedPackageDimensionsFedExBoxSmall1 PredefinedPackageDimensions = "FedEx_Box_Small_1"

	PredefinedPackageDimensionsFedExBoxSmall2 PredefinedPackageDimensions = "FedEx_Box_Small_2"

	PredefinedPackageDimensionsFedExEnvelope PredefinedPackageDimensions = "FedEx_Envelope"

	PredefinedPackageDimensionsFedExPaddedPak PredefinedPackageDimensions = "FedEx_Padded_Pak"

	PredefinedPackageDimensionsFedExPak1 PredefinedPackageDimensions = "FedEx_Pak_1"

	PredefinedPackageDimensionsFedExPak2 PredefinedPackageDimensions = "FedEx_Pak_2"

	PredefinedPackageDimensionsFedExTube PredefinedPackageDimensions = "FedEx_Tube"

	PredefinedPackageDimensionsFedExXLPak PredefinedPackageDimensions = "FedEx_XL_Pak"

	PredefinedPackageDimensionsUPSBox10kg PredefinedPackageDimensions = "UPS_Box_10kg"

	PredefinedPackageDimensionsUPSBox25kg PredefinedPackageDimensions = "UPS_Box_25kg"

	PredefinedPackageDimensionsUPSExpressBox PredefinedPackageDimensions = "UPS_Express_Box"

	PredefinedPackageDimensionsUPSExpressBoxLarge PredefinedPackageDimensions = "UPS_Express_Box_Large"

	PredefinedPackageDimensionsUPSExpressBoxMedium PredefinedPackageDimensions = "UPS_Express_Box_Medium"

	PredefinedPackageDimensionsUPSExpressBoxSmall PredefinedPackageDimensions = "UPS_Express_Box_Small"

	PredefinedPackageDimensionsUPSExpressEnvelope PredefinedPackageDimensions = "UPS_Express_Envelope"

	PredefinedPackageDimensionsUPSExpressHardPak PredefinedPackageDimensions = "UPS_Express_Hard_Pak"

	PredefinedPackageDimensionsUPSExpressLegalEnvelope PredefinedPackageDimensions = "UPS_Express_Legal_Envelope"

	PredefinedPackageDimensionsUPSExpressPak PredefinedPackageDimensions = "UPS_Express_Pak"

	PredefinedPackageDimensionsUPSExpressTube PredefinedPackageDimensions = "UPS_Express_Tube"

	PredefinedPackageDimensionsUPSLaboratoryPak PredefinedPackageDimensions = "UPS_Laboratory_Pak"

	PredefinedPackageDimensionsUPSPadPak PredefinedPackageDimensions = "UPS_Pad_Pak"

	PredefinedPackageDimensionsUPSPallet PredefinedPackageDimensions = "UPS_Pallet"

	PredefinedPackageDimensionsUSPSCard PredefinedPackageDimensions = "USPS_Card"

	PredefinedPackageDimensionsUSPSFlat PredefinedPackageDimensions = "USPS_Flat"

	PredefinedPackageDimensionsUSPSFlatRateCardboardEnvelope PredefinedPackageDimensions = "USPS_FlatRateCardboardEnvelope"

	PredefinedPackageDimensionsUSPSFlatRateEnvelope PredefinedPackageDimensions = "USPS_FlatRateEnvelope"

	PredefinedPackageDimensionsUSPSFlatRateGiftCardEnvelope PredefinedPackageDimensions = "USPS_FlatRateGiftCardEnvelope"

	PredefinedPackageDimensionsUSPSFlatRateLegalEnvelope PredefinedPackageDimensions = "USPS_FlatRateLegalEnvelope"

	PredefinedPackageDimensionsUSPSFlatRatePaddedEnvelope PredefinedPackageDimensions = "USPS_FlatRatePaddedEnvelope"

	PredefinedPackageDimensionsUSPSFlatRateWindowEnvelope PredefinedPackageDimensions = "USPS_FlatRateWindowEnvelope"

	PredefinedPackageDimensionsUSPSLargeFlatRateBoardGameBox PredefinedPackageDimensions = "USPS_LargeFlatRateBoardGameBox"

	PredefinedPackageDimensionsUSPSLargeFlatRateBox PredefinedPackageDimensions = "USPS_LargeFlatRateBox"

	PredefinedPackageDimensionsUSPSLetter PredefinedPackageDimensions = "USPS_Letter"

	PredefinedPackageDimensionsUSPSMediumFlatRateBox1 PredefinedPackageDimensions = "USPS_MediumFlatRateBox1"

	PredefinedPackageDimensionsUSPSMediumFlatRateBox2 PredefinedPackageDimensions = "USPS_MediumFlatRateBox2"

	PredefinedPackageDimensionsUSPSRegionalRateBoxA1 PredefinedPackageDimensions = "USPS_RegionalRateBoxA1"

	PredefinedPackageDimensionsUSPSRegionalRateBoxA2 PredefinedPackageDimensions = "USPS_RegionalRateBoxA2"

	PredefinedPackageDimensionsUSPSRegionalRateBoxB1 PredefinedPackageDimensions = "USPS_RegionalRateBoxB1"

	PredefinedPackageDimensionsUSPSRegionalRateBoxB2 PredefinedPackageDimensions = "USPS_RegionalRateBoxB2"

	PredefinedPackageDimensionsUSPSRegionalRateBoxC PredefinedPackageDimensions = "USPS_RegionalRateBoxC"

	PredefinedPackageDimensionsUSPSSmallFlatRateBox PredefinedPackageDimensions = "USPS_SmallFlatRateBox"

	PredefinedPackageDimensionsUSPSSmallFlatRateEnvelope PredefinedPackageDimensions = "USPS_SmallFlatRateEnvelope"
)

// Defines values for ShipmentStatus.
const (
	ShipmentStatusPurchased ShipmentStatus = "Purchased"

	ShipmentStatusRefundApplied ShipmentStatus = "RefundApplied"

	ShipmentStatusRefundPending ShipmentStatus = "RefundPending"

	ShipmentStatusRefundRejected ShipmentStatus = "RefundRejected"
)

// Defines values for StandardIdForLabel.
const (
	StandardIdForLabelAmazonOrderId StandardIdForLabel = "AmazonOrderId"
)

// Defines values for UnitOfLength.
const (
	UnitOfLengthCentimeters UnitOfLength = "centimeters"

	UnitOfLengthInches UnitOfLength = "inches"
)

// Defines values for UnitOfWeight.
const (
	UnitOfWeightG UnitOfWeight = "g"

	UnitOfWeightOz UnitOfWeight = "oz"
)

// Maps the additional seller input to the definition. The key to the map is the field name.
type AdditionalInputs struct {

	// The field name.
	AdditionalInputFieldName *string `json:"AdditionalInputFieldName,omitempty"`

	// Specifies characteristics that apply to a seller input.
	SellerInputDefinition *SellerInputDefinition `json:"SellerInputDefinition,omitempty"`
}

// A list of additional inputs.
type AdditionalInputsList []AdditionalInputs

// Additional information required to purchase shipping.
type AdditionalSellerInput struct {

	// The data type of the additional information.
	DataType *string `json:"DataType,omitempty"`

	// The postal address information.
	ValueAsAddress *Address `json:"ValueAsAddress,omitempty"`

	// The value when the data type is boolean.
	ValueAsBoolean *bool `json:"ValueAsBoolean,omitempty"`

	// Currency type and amount.
	ValueAsCurrency *CurrencyAmount `json:"ValueAsCurrency,omitempty"`

	// The length.
	ValueAsDimension *Length `json:"ValueAsDimension,omitempty"`

	// The value when the data type is integer.
	ValueAsInteger *int `json:"ValueAsInteger,omitempty"`

	// The value when the data type is string.
	ValueAsString    *string    `json:"ValueAsString,omitempty"`
	ValueAsTimestamp *Timestamp `json:"ValueAsTimestamp,omitempty"`

	// The weight.
	ValueAsWeight *Weight `json:"ValueAsWeight,omitempty"`
}

// An additional set of seller inputs required to purchase shipping.
type AdditionalSellerInputs struct {

	// The name of the additional input field.
	AdditionalInputFieldName string `json:"AdditionalInputFieldName"`

	// Additional information required to purchase shipping.
	AdditionalSellerInput AdditionalSellerInput `json:"AdditionalSellerInput"`
}

// A list of additional seller input pairs required to purchase shipping.
type AdditionalSellerInputsList []AdditionalSellerInputs

// The postal address information.
type Address struct {

	// The street address information.
	AddressLine1 AddressLine1 `json:"AddressLine1"`

	// Additional street address information.
	AddressLine2 *AddressLine2 `json:"AddressLine2,omitempty"`

	// Additional street address information.
	AddressLine3 *AddressLine3 `json:"AddressLine3,omitempty"`

	// The city.
	City City `json:"City"`

	// The country code. A two-character country code, in ISO 3166-1 alpha-2 format.
	CountryCode CountryCode `json:"CountryCode"`

	// The district or county.
	DistrictOrCounty *DistrictOrCounty `json:"DistrictOrCounty,omitempty"`

	// The email address.
	Email EmailAddress `json:"Email"`

	// The name of the addressee, or business name.
	Name AddressName `json:"Name"`

	// The phone number.
	Phone PhoneNumber `json:"Phone"`

	// The zip code or postal code.
	PostalCode PostalCode `json:"PostalCode"`

	// The state or province code.
	StateOrProvinceCode *StateOrProvinceCode `json:"StateOrProvinceCode,omitempty"`
}

// The street address information.
type AddressLine1 string

// Additional street address information.
type AddressLine2 string

// Additional street address information.
type AddressLine3 string

// The name of the addressee, or business name.
type AddressName string

// An Amazon-defined order identifier, in 3-7-7 format. <br>**Pattern** : `[0-9A-Z]{3}-[0-9]{7}-[0-9]{7}`.
type AmazonOrderId string

// Indicates whether the carrier will pick up the package, and what fee is charged, if any.
type AvailableCarrierWillPickUpOption struct {

	// Carrier will pick up option.
	CarrierWillPickUpOption CarrierWillPickUpOption `json:"CarrierWillPickUpOption"`

	// Currency type and amount.
	Charge CurrencyAmount `json:"Charge"`
}

// List of available carrier pickup options.
type AvailableCarrierWillPickUpOptionsList []AvailableCarrierWillPickUpOption

// The available delivery confirmation options, and the fee charged, if any.
type AvailableDeliveryExperienceOption struct {

	// Currency type and amount.
	Charge CurrencyAmount `json:"Charge"`

	// The delivery confirmation level.
	DeliveryExperienceOption DeliveryExperienceOption `json:"DeliveryExperienceOption"`
}

// List of available delivery experience options.
type AvailableDeliveryExperienceOptionsList []AvailableDeliveryExperienceOption

// The available label formats.
type AvailableFormatOptionsForLabelList []LabelFormatOption

// The available shipping service options.
type AvailableShippingServiceOptions struct {

	// List of available carrier pickup options.
	AvailableCarrierWillPickUpOptions AvailableCarrierWillPickUpOptionsList `json:"AvailableCarrierWillPickUpOptions"`

	// List of available delivery experience options.
	AvailableDeliveryExperienceOptions AvailableDeliveryExperienceOptionsList `json:"AvailableDeliveryExperienceOptions"`
}

// Response schema.
type CancelShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The details of a shipment, including the shipment status.
	Payload *Shipment `json:"payload,omitempty"`
}

// Carrier will pick up option.
type CarrierWillPickUpOption string

// The city.
type City string

// A validation constraint.
type Constraint struct {

	// A regular expression.
	ValidationRegEx *string `json:"ValidationRegEx,omitempty"`

	// A validation string.
	ValidationString string `json:"ValidationString"`
}

// List of constraints.
type Constraints []Constraint

// The country code. A two-character country code, in ISO 3166-1 alpha-2 format.
type CountryCode string

// Request schema.
type CreateShipmentRequest struct {

	// Hazardous materials options for a package. Consult the terms and conditions for each carrier for more information on hazardous materials.
	HazmatType *HazmatType `json:"HazmatType,omitempty"`

	// Whether to include a packing slip.
	LabelFormatOption *LabelFormatOptionRequest `json:"LabelFormatOption,omitempty"`

	// A list of additional seller input pairs required to purchase shipping.
	ShipmentLevelSellerInputsList *AdditionalSellerInputsList `json:"ShipmentLevelSellerInputsList,omitempty"`

	// Shipment information required for requesting shipping service offers or for creating a shipment.
	ShipmentRequestDetails ShipmentRequestDetails `json:"ShipmentRequestDetails"`

	// An Amazon-defined shipping service identifier.
	ShippingServiceId ShippingServiceIdentifier `json:"ShippingServiceId"`

	// Identifies a shipping service order made by a carrier.
	ShippingServiceOfferId *string `json:"ShippingServiceOfferId,omitempty"`
}

// Response schema.
type CreateShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The details of a shipment, including the shipment status.
	Payload *Shipment `json:"payload,omitempty"`
}

// Currency type and amount.
type CurrencyAmount struct {

	// The currency amount.
	Amount float64 `json:"Amount"`

	// Three-digit currency code in ISO 4217 format.
	CurrencyCode string `json:"CurrencyCode"`
}

// Custom text to print on the label.
//
// Note: Custom text is only included on labels that are in ZPL format (ZPL203). FedEx does not support CustomTextForLabel.
type CustomTextForLabel string

// The delivery confirmation level.
type DeliveryExperienceOption string

// The delivery confirmation level.
type DeliveryExperienceType string

// The district or county.
type DistrictOrCounty string

// The email address.
type EmailAddress string

// Error response returned when the request is unsuccessful.
type Error struct {

	// An error code that identifies the type of error that occured.
	Code string `json:"code"`

	// Additional details that can help the caller understand or fix the issue.
	Details *string `json:"details,omitempty"`

	// A message that describes the error condition in a human-readable form.
	Message string `json:"message"`
}

// A list of error responses returned when a request is unsuccessful.
type ErrorList []Error

// The document data and checksum.
type FileContents struct {

	// An MD5 hash to validate the PDF document data, in the form of a Base64-encoded string.
	Checksum string `json:"Checksum"`

	// Data for printing labels, in the form of a Base64-encoded, GZip-compressed string.
	Contents string `json:"Contents"`

	// The file type for a label.
	FileType FileType `json:"FileType"`
}

// The file type for a label.
type FileType string

// Request schema.
type GetAdditionalSellerInputsRequest struct {

	// An Amazon-defined order identifier, in 3-7-7 format. <br>**Pattern** : `[0-9A-Z]{3}-[0-9]{7}-[0-9]{7}`.
	OrderId AmazonOrderId `json:"OrderId"`

	// The postal address information.
	ShipFromAddress Address `json:"ShipFromAddress"`

	// An Amazon-defined shipping service identifier.
	ShippingServiceId ShippingServiceIdentifier `json:"ShippingServiceId"`
}

// Response schema.
type GetAdditionalSellerInputsResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload for the getAdditionalSellerInputs operation.
	Payload *GetAdditionalSellerInputsResult `json:"payload,omitempty"`
}

// The payload for the getAdditionalSellerInputs operation.
type GetAdditionalSellerInputsResult struct {

	// A list of item level fields.
	ItemLevelFieldsList *ItemLevelFieldsList `json:"ItemLevelFieldsList,omitempty"`

	// A list of additional inputs.
	ShipmentLevelFields *AdditionalInputsList `json:"ShipmentLevelFields,omitempty"`
}

// Request schema.
type GetEligibleShipmentServicesRequest struct {

	// Shipment information required for requesting shipping service offers or for creating a shipment.
	ShipmentRequestDetails ShipmentRequestDetails `json:"ShipmentRequestDetails"`

	// Filter for use when requesting eligible shipping services.
	ShippingOfferingFilter *ShippingOfferingFilter `json:"ShippingOfferingFilter,omitempty"`
}

// Response schema.
type GetEligibleShipmentServicesResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The payload for the getEligibleShipmentServices operation.
	Payload *GetEligibleShipmentServicesResult `json:"payload,omitempty"`
}

// The payload for the getEligibleShipmentServices operation.
type GetEligibleShipmentServicesResult struct {

	// List of services that were for some reason unavailable for this request
	RejectedShippingServiceList *RejectedShippingServiceList `json:"RejectedShippingServiceList,omitempty"`

	// A list of shipping services offers.
	ShippingServiceList ShippingServiceList `json:"ShippingServiceList"`

	// A list of temporarily unavailable carriers.
	TemporarilyUnavailableCarrierList *TemporarilyUnavailableCarrierList `json:"TemporarilyUnavailableCarrierList,omitempty"`

	// List of carriers whose terms and conditions were not accepted by the seller.
	TermsAndConditionsNotAcceptedCarrierList *TermsAndConditionsNotAcceptedCarrierList `json:"TermsAndConditionsNotAcceptedCarrierList,omitempty"`
}

// Response schema.
type GetShipmentResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors *ErrorList `json:"errors,omitempty"`

	// The details of a shipment, including the shipment status.
	Payload *Shipment `json:"payload,omitempty"`
}

// Hazardous materials options for a package. Consult the terms and conditions for each carrier for more information on hazardous materials.
type HazmatType string

// Indicates whether the additional seller input is at the item or shipment level.
type InputTargetType string

// An Amazon order item identifier and a quantity.
type Item struct {

	// The description of the item.
	ItemDescription *ItemDescription `json:"ItemDescription,omitempty"`

	// A list of additional seller input pairs required to purchase shipping.
	ItemLevelSellerInputsList *AdditionalSellerInputsList `json:"ItemLevelSellerInputsList,omitempty"`

	// The weight.
	ItemWeight *Weight `json:"ItemWeight,omitempty"`

	// An Amazon-defined identifier for an individual item in an order.
	OrderItemId OrderItemId `json:"OrderItemId"`

	// The number of items.
	Quantity ItemQuantity `json:"Quantity"`

	// A list of transparency codes.
	TransparencyCodeList *TransparencyCodeList `json:"TransparencyCodeList,omitempty"`
}

// The description of the item.
type ItemDescription string

// ItemLevelFields defines model for ItemLevelFields.
type ItemLevelFields struct {

	// A list of additional inputs.
	AdditionalInputs AdditionalInputsList `json:"AdditionalInputs"`

	// The Amazon Standard Identification Number (ASIN) of the item.
	Asin string `json:"Asin"`
}

// A list of item level fields.
type ItemLevelFieldsList []ItemLevelFields

// The list of items to be included in a shipment.
type ItemList []Item

// The number of items.
type ItemQuantity int32

// Data for creating a shipping label and dimensions for printing the label.
type Label struct {

	// Custom text to print on the label.
	//
	// Note: Custom text is only included on labels that are in ZPL format (ZPL203). FedEx does not support CustomTextForLabel.
	CustomTextForLabel *CustomTextForLabel `json:"CustomTextForLabel,omitempty"`

	// Dimensions for printing a shipping label.
	Dimensions LabelDimensions `json:"Dimensions"`

	// The document data and checksum.
	FileContents FileContents `json:"FileContents"`

	// The label format.
	LabelFormat *LabelFormat `json:"LabelFormat,omitempty"`

	// The type of standard identifier to print on the label.
	StandardIdForLabel *StandardIdForLabel `json:"StandardIdForLabel,omitempty"`
}

// Custom text for shipping labels.
type LabelCustomization struct {

	// Custom text to print on the label.
	//
	// Note: Custom text is only included on labels that are in ZPL format (ZPL203). FedEx does not support CustomTextForLabel.
	CustomTextForLabel *CustomTextForLabel `json:"CustomTextForLabel,omitempty"`

	// The type of standard identifier to print on the label.
	StandardIdForLabel *StandardIdForLabel `json:"StandardIdForLabel,omitempty"`
}

// A label dimension.
type LabelDimension float32

// Dimensions for printing a shipping label.
type LabelDimensions struct {

	// A label dimension.
	Length LabelDimension `json:"Length"`

	// The unit of length.
	Unit UnitOfLength `json:"Unit"`

	// A label dimension.
	Width LabelDimension `json:"Width"`
}

// The label format.
type LabelFormat string

// List of label formats.
type LabelFormatList []LabelFormat

// The label format details and whether to include a packing slip.
type LabelFormatOption struct {

	// When true, include a packing slip with the label.
	IncludePackingSlipWithLabel *bool `json:"IncludePackingSlipWithLabel,omitempty"`

	// The label format.
	LabelFormat *LabelFormat `json:"LabelFormat,omitempty"`
}

// Whether to include a packing slip.
type LabelFormatOptionRequest struct {

	// When true, include a packing slip with the label.
	IncludePackingSlipWithLabel *bool `json:"IncludePackingSlipWithLabel,omitempty"`
}

// The length.
type Length struct {

	// The unit of length.
	Unit *UnitOfLength `json:"unit,omitempty"`

	// The value in units.
	Value *float32 `json:"value,omitempty"`
}

// An Amazon-defined identifier for an individual item in an order.
type OrderItemId string

// PackageDimension defines model for PackageDimension.
type PackageDimension float64

// The dimensions of a package contained in a shipment.
type PackageDimensions struct {
	Height *PackageDimension `json:"Height,omitempty"`
	Length *PackageDimension `json:"Length,omitempty"`

	// An enumeration of predefined parcel tokens. If you specify a PredefinedPackageDimensions token, you are not obligated to use a branded package from a carrier. For example, if you specify the FedEx_Box_10kg token, you do not have to use that particular package from FedEx. You are only obligated to use a box that matches the dimensions specified by the token.
	//
	// Note: Please note that carriers can have restrictions on the type of package allowed for certain ship methods. Check the carrier website for all details. Example: Flat rate pricing is available when materials are sent by USPS in a USPS-produced Flat Rate Envelope or Box.
	PredefinedPackageDimensions *PredefinedPackageDimensions `json:"PredefinedPackageDimensions,omitempty"`

	// The unit of length.
	Unit  *UnitOfLength     `json:"Unit,omitempty"`
	Width *PackageDimension `json:"Width,omitempty"`
}

// The phone number.
type PhoneNumber string

// The zip code or postal code.
type PostalCode string

// An enumeration of predefined parcel tokens. If you specify a PredefinedPackageDimensions token, you are not obligated to use a branded package from a carrier. For example, if you specify the FedEx_Box_10kg token, you do not have to use that particular package from FedEx. You are only obligated to use a box that matches the dimensions specified by the token.
//
// Note: Please note that carriers can have restrictions on the type of package allowed for certain ship methods. Check the carrier website for all details. Example: Flat rate pricing is available when materials are sent by USPS in a USPS-produced Flat Rate Envelope or Box.
type PredefinedPackageDimensions string

// Information about a rejected shipping service
type RejectedShippingService struct {

	// The rejected shipping carrier name. e.g. USPS
	CarrierName string `json:"CarrierName"`

	// A reason code meant to be consumed programatically. e.g. CARRIER_CANNOT_SHIP_TO_POBOX
	RejectionReasonCode string `json:"RejectionReasonCode"`

	// A localized human readable description of the rejected reason.
	RejectionReasonMessage *string `json:"RejectionReasonMessage,omitempty"`

	// An Amazon-defined shipping service identifier.
	ShippingServiceId ShippingServiceIdentifier `json:"ShippingServiceId"`

	// The rejected shipping service localized name. e.g. FedEx Standard Overnight
	ShippingServiceName string `json:"ShippingServiceName"`
}

// List of services that were for some reason unavailable for this request
type RejectedShippingServiceList []RejectedShippingService

// The set of fixed values in an additional seller input.
type RestrictedSetValues []string

// Specifies characteristics that apply to a seller input.
type SellerInputDefinition struct {

	// List of constraints.
	Constraints Constraints `json:"Constraints"`

	// The data type of the additional input field.
	DataType string `json:"DataType"`

	// The display text for the additional input field.
	InputDisplayText string `json:"InputDisplayText"`

	// Indicates whether the additional seller input is at the item or shipment level.
	InputTarget *InputTargetType `json:"InputTarget,omitempty"`

	// When true, the additional input field is required.
	IsRequired bool `json:"IsRequired"`

	// The set of fixed values in an additional seller input.
	RestrictedSetValues *RestrictedSetValues `json:"RestrictedSetValues,omitempty"`

	// Additional information required to purchase shipping.
	StoredValue AdditionalSellerInput `json:"StoredValue"`
}

// A seller-defined order identifier.
type SellerOrderId string

// The details of a shipment, including the shipment status.
type Shipment struct {

	// An Amazon-defined order identifier, in 3-7-7 format. <br>**Pattern** : `[0-9A-Z]{3}-[0-9]{7}-[0-9]{7}`.
	AmazonOrderId AmazonOrderId `json:"AmazonOrderId"`
	CreatedDate   Timestamp     `json:"CreatedDate"`

	// Currency type and amount.
	Insurance CurrencyAmount `json:"Insurance"`

	// The list of items to be included in a shipment.
	ItemList ItemList `json:"ItemList"`

	// Data for creating a shipping label and dimensions for printing the label.
	Label           Label      `json:"Label"`
	LastUpdatedDate *Timestamp `json:"LastUpdatedDate,omitempty"`

	// The dimensions of a package contained in a shipment.
	PackageDimensions PackageDimensions `json:"PackageDimensions"`

	// A seller-defined order identifier.
	SellerOrderId *SellerOrderId `json:"SellerOrderId,omitempty"`

	// The postal address information.
	ShipFromAddress Address `json:"ShipFromAddress"`

	// The postal address information.
	ShipToAddress Address `json:"ShipToAddress"`

	// An Amazon-defined shipment identifier.
	ShipmentId ShipmentId `json:"ShipmentId"`

	// A shipping service offer made by a carrier.
	ShippingService ShippingService `json:"ShippingService"`

	// The shipment status.
	Status ShipmentStatus `json:"Status"`

	// The shipment tracking identifier provided by the carrier.
	TrackingId *TrackingId `json:"TrackingId,omitempty"`

	// The weight.
	Weight Weight `json:"Weight"`
}

// An Amazon-defined shipment identifier.
type ShipmentId string

// Shipment information required for requesting shipping service offers or for creating a shipment.
type ShipmentRequestDetails struct {

	// An Amazon-defined order identifier, in 3-7-7 format. <br>**Pattern** : `[0-9A-Z]{3}-[0-9]{7}-[0-9]{7}`.
	AmazonOrderId AmazonOrderId `json:"AmazonOrderId"`

	// The list of items to be included in a shipment.
	ItemList ItemList `json:"ItemList"`

	// Custom text for shipping labels.
	LabelCustomization *LabelCustomization `json:"LabelCustomization,omitempty"`
	MustArriveByDate   *Timestamp          `json:"MustArriveByDate,omitempty"`

	// The dimensions of a package contained in a shipment.
	PackageDimensions PackageDimensions `json:"PackageDimensions"`

	// A seller-defined order identifier.
	SellerOrderId *SellerOrderId `json:"SellerOrderId,omitempty"`
	ShipDate      *Timestamp     `json:"ShipDate,omitempty"`

	// The postal address information.
	ShipFromAddress Address `json:"ShipFromAddress"`

	// Extra services provided by a carrier.
	ShippingServiceOptions ShippingServiceOptions `json:"ShippingServiceOptions"`

	// The weight.
	Weight Weight `json:"Weight"`
}

// The shipment status.
type ShipmentStatus string

// Filter for use when requesting eligible shipping services.
type ShippingOfferingFilter struct {

	// Carrier will pick up option.
	CarrierWillPickUp *CarrierWillPickUpOption `json:"CarrierWillPickUp,omitempty"`

	// The delivery confirmation level.
	DeliveryExperience *DeliveryExperienceOption `json:"DeliveryExperience,omitempty"`

	// When true, include complex shipping options.
	IncludeComplexShippingOptions *bool `json:"IncludeComplexShippingOptions,omitempty"`

	// When true, include a packing slip with the label.
	IncludePackingSlipWithLabel *bool `json:"IncludePackingSlipWithLabel,omitempty"`
}

// A shipping service offer made by a carrier.
type ShippingService struct {

	// The available label formats.
	AvailableFormatOptionsForLabel *AvailableFormatOptionsForLabelList `json:"AvailableFormatOptionsForLabel,omitempty"`

	// List of label formats.
	AvailableLabelFormats *LabelFormatList `json:"AvailableLabelFormats,omitempty"`

	// The available shipping service options.
	AvailableShippingServiceOptions *AvailableShippingServiceOptions `json:"AvailableShippingServiceOptions,omitempty"`

	// The name of the carrier.
	CarrierName                   string     `json:"CarrierName"`
	EarliestEstimatedDeliveryDate *Timestamp `json:"EarliestEstimatedDeliveryDate,omitempty"`
	LatestEstimatedDeliveryDate   *Timestamp `json:"LatestEstimatedDeliveryDate,omitempty"`

	// Currency type and amount.
	Rate CurrencyAmount `json:"Rate"`

	// When true, additional seller inputs are required.
	RequiresAdditionalSellerInputs bool      `json:"RequiresAdditionalSellerInputs"`
	ShipDate                       Timestamp `json:"ShipDate"`

	// An Amazon-defined shipping service identifier.
	ShippingServiceId ShippingServiceIdentifier `json:"ShippingServiceId"`

	// A plain text representation of a carrier's shipping service. For example, "UPS Ground" or "FedEx Standard Overnight".
	ShippingServiceName string `json:"ShippingServiceName"`

	// An Amazon-defined shipping service offer identifier.
	ShippingServiceOfferId string `json:"ShippingServiceOfferId"`

	// Extra services provided by a carrier.
	ShippingServiceOptions ShippingServiceOptions `json:"ShippingServiceOptions"`
}

// An Amazon-defined shipping service identifier.
type ShippingServiceIdentifier string

// A list of shipping services offers.
type ShippingServiceList []ShippingService

// Extra services provided by a carrier.
type ShippingServiceOptions struct {

	// When true, the carrier will pick up the package.
	//
	// Note: Scheduled carrier pickup is available only using Dynamex (US), DPD (UK), and Royal Mail (UK).
	CarrierWillPickUp bool `json:"CarrierWillPickUp"`

	// Carrier will pick up option.
	CarrierWillPickUpOption *CarrierWillPickUpOption `json:"CarrierWillPickUpOption,omitempty"`

	// Currency type and amount.
	DeclaredValue *CurrencyAmount `json:"DeclaredValue,omitempty"`

	// The delivery confirmation level.
	DeliveryExperience DeliveryExperienceType `json:"DeliveryExperience"`

	// The label format.
	LabelFormat *LabelFormat `json:"LabelFormat,omitempty"`
}

// The type of standard identifier to print on the label.
type StandardIdForLabel string

// The state or province code.
type StateOrProvinceCode string

// A carrier who is temporarily unavailable, most likely due to a service outage experienced by the carrier.
type TemporarilyUnavailableCarrier struct {

	// The name of the carrier.
	CarrierName string `json:"CarrierName"`
}

// A list of temporarily unavailable carriers.
type TemporarilyUnavailableCarrierList []TemporarilyUnavailableCarrier

// A carrier whose terms and conditions have not been accepted by the seller.
type TermsAndConditionsNotAcceptedCarrier struct {

	// The name of the carrier.
	CarrierName string `json:"CarrierName"`
}

// List of carriers whose terms and conditions were not accepted by the seller.
type TermsAndConditionsNotAcceptedCarrierList []TermsAndConditionsNotAcceptedCarrier

// Timestamp defines model for Timestamp.
type Timestamp time.Time

// The shipment tracking identifier provided by the carrier.
type TrackingId string

// The Transparency code associated with the item.
type TransparencyCode string

// A list of transparency codes.
type TransparencyCodeList []TransparencyCode

// The unit of length.
type UnitOfLength string

// The unit of weight.
type UnitOfWeight string

// The weight.
type Weight struct {

	// The unit of weight.
	Unit UnitOfWeight `json:"Unit"`

	// The weight value.
	Value WeightValue `json:"Value"`
}

// The weight value.
type WeightValue float64

// GetAdditionalSellerInputsJSONBody defines parameters for GetAdditionalSellerInputs.
type GetAdditionalSellerInputsJSONBody GetAdditionalSellerInputsRequest

// GetEligibleShipmentServicesOldJSONBody defines parameters for GetEligibleShipmentServicesOld.
type GetEligibleShipmentServicesOldJSONBody GetEligibleShipmentServicesRequest

// GetEligibleShipmentServicesJSONBody defines parameters for GetEligibleShipmentServices.
type GetEligibleShipmentServicesJSONBody GetEligibleShipmentServicesRequest

// GetAdditionalSellerInputsOldJSONBody defines parameters for GetAdditionalSellerInputsOld.
type GetAdditionalSellerInputsOldJSONBody GetAdditionalSellerInputsRequest

// CreateShipmentJSONBody defines parameters for CreateShipment.
type CreateShipmentJSONBody CreateShipmentRequest

// GetAdditionalSellerInputsJSONRequestBody defines body for GetAdditionalSellerInputs for application/json ContentType.
type GetAdditionalSellerInputsJSONRequestBody GetAdditionalSellerInputsJSONBody

// GetEligibleShipmentServicesOldJSONRequestBody defines body for GetEligibleShipmentServicesOld for application/json ContentType.
type GetEligibleShipmentServicesOldJSONRequestBody GetEligibleShipmentServicesOldJSONBody

// GetEligibleShipmentServicesJSONRequestBody defines body for GetEligibleShipmentServices for application/json ContentType.
type GetEligibleShipmentServicesJSONRequestBody GetEligibleShipmentServicesJSONBody

// GetAdditionalSellerInputsOldJSONRequestBody defines body for GetAdditionalSellerInputsOld for application/json ContentType.
type GetAdditionalSellerInputsOldJSONRequestBody GetAdditionalSellerInputsOldJSONBody

// CreateShipmentJSONRequestBody defines body for CreateShipment for application/json ContentType.
type CreateShipmentJSONRequestBody CreateShipmentJSONBody
